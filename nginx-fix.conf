server {
    listen 80;
    server_name koyn.finance;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name koyn.finance;

    ssl_certificate /etc/letsencrypt/live/koyn.finance/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/koyn.finance/privkey.pem;
    
    # SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;

    # Custom error pages - Route all errors to React app
    error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 425 426 428 429 431 451 500 501 502 503 504 505 506 507 508 510 511 /error-handler;
    
    # Error handler location - routes to React app
    location = /error-handler {
        internal;
        rewrite ^.*$ /app/error?code=$status&message=$request_uri last;
    }
    
    # Handle 404 specifically for better UX
    location = /404-handler {
        internal;
        rewrite ^.*$ /app/404 last;
    }

    # Verification API endpoints - Route to verification service
    location ~ ^/api/verification {
        proxy_pass https://localhost:3005;
        
        # SSL settings for internal HTTPS proxy
        proxy_ssl_verify off;
        proxy_ssl_server_name on;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Add CORS headers for verification API endpoints
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, X-Requested-With, X-Request-Time, Authorization, Accept, Origin' always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type, X-Requested-With, X-Request-Time, Authorization, Accept, Origin';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # Subscription API endpoints - Route to webhook handler
    location ~ ^/api/subscription {
        proxy_pass http://localhost:3003;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Add CORS headers for subscription API endpoints
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, X-Requested-With, X-Request-Time, Authorization, Accept, Origin' always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type, X-Requested-With, X-Request-Time, Authorization, Accept, Origin';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # React App Routes - Must be processed before Nitter routes
    # This directs all /app/* routes to the React application
    location ^~ /app/ {
        proxy_pass http://127.0.0.1:3002;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Needed for SPA routing
        #try_files $uri $uri/ /index.html;
        
        # Don't cache HTML to ensure latest version
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        
        proxy_read_timeout 90;
        proxy_connect_timeout 90;
        
        # Override error pages for React app routes
        error_page 404 = @react_404;
        error_page 500 502 503 504 = @react_error;
    }

    # React 404 handler
    location @react_404 {
        rewrite ^.*$ /app/404 last;
    }

    # React error handler  
    location @react_error {
        rewrite ^.*$ /app/error?code=$status last;
    }

    # 1. PROXY ASSETS DIRECTLY TO YOUR REACT APP
    # This must come first and overrides the filesystem-based approach
    location ^~ /assets/ {
        proxy_pass http://127.0.0.1:3002/assets/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Add caching headers
        proxy_cache_bypass $http_pragma;
        proxy_cache_revalidate on;
        expires 7d;
        add_header Cache-Control "public, max-age=604800";
    }

    # 1. ADD VIDEO PLAYBACK SUPPORT - THIS MUST COME FIRST
    location ~ ^/video/ {
        proxy_pass http://127.0.0.1:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Video streaming needs longer timeouts
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
        proxy_read_timeout 300;
        send_timeout 300;
        
        # Support for seeking in videos
        proxy_set_header Range $http_range;
        proxy_set_header If-Range $http_if_range;
    }

    # 2. ADD BANNER IMAGE SUPPORT
    location ~ ^/banner/ {
        proxy_pass http://127.0.0.1:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Add caching for banner images
        expires 7d;
        add_header Cache-Control "public";
    }

    # Handle Nitter's static files (CSS, JS, images)
    location ~ ^/(css|fonts|js)/ {
        proxy_pass http://127.0.0.1:8080$request_uri;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Add caching for static assets
        expires 7d;
        add_header Cache-Control "public";
    }

    # Improved pic handling
    location /pic/ {
        proxy_pass http://127.0.0.1:8080/pic/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # 3. ADD HLS STREAMING SUPPORT
    location ~ \.(m3u8|ts)$ {
        proxy_pass http://127.0.0.1:8080;
        proxy_set_header Host $host;
        
        # HLS specific settings
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }

    # Authentication API endpoints - MUST BE BEFORE GENERAL API ENDPOINTS
    location /api/auth/ {
        proxy_pass https://127.0.0.1:3005/api/auth/;
        
        # SSL settings for internal HTTPS proxy
        proxy_ssl_verify off;
        proxy_ssl_server_name on;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 90;
        proxy_connect_timeout 90;
    }

    # API endpoints - MUST BE BEFORE PROFILE MATCHING
    location /api/ {
        proxy_pass http://127.0.0.1:3001/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 90;
        proxy_connect_timeout 90;
    }

    # Proxy for user profiles - this needs to be BEFORE the / location block
    location ~ ^/([a-zA-Z0-9_]+)$ {
        # Forward to Nitter
        proxy_pass http://127.0.0.1:8080/$1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 90;
        
        # Override Nitter error pages
        error_page 404 = @nitter_404;
        error_page 500 502 503 504 = @nitter_error;
    }
    
    # Handle profile subpages (media, replies, etc)
    location ~ ^/([a-zA-Z0-9_]+)/(media|search|with_replies|photos|status)(/.*)?$ {
        proxy_pass http://127.0.0.1:8080/$1/$2$3;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Override Nitter error pages
        error_page 404 = @nitter_404;
        error_page 500 502 503 504 = @nitter_error;
    }

    # Profiles API
    location /profiles/ {
        proxy_pass http://127.0.0.1:8080/profiles/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 90;
        proxy_connect_timeout 90;
        
        # Override Nitter error pages
        error_page 404 = @nitter_404;
        error_page 500 502 503 504 = @nitter_error;
    }

    # Add this location block specifically for search functionality
    location ~ ^/(.+)/search {
        # This handles username/search patterns
        proxy_pass http://127.0.0.1:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Override Nitter error pages
        error_page 404 = @nitter_404;
        error_page 500 502 503 504 = @nitter_error;
    }

    # Add a specific handler for the main search page
    location = /search {
        proxy_pass http://127.0.0.1:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Override Nitter error pages
        error_page 404 = @nitter_404;
        error_page 500 502 503 504 = @nitter_error;
    }

    # Update your profile handling to exclude search paths
    location ~ ^/([^/]+)(?!/(search|pic|video|banner|api|app)) {
        # This ensures profile routes don't capture search routes, API routes, or app routes
        proxy_pass http://127.0.0.1:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Override Nitter error pages
        error_page 404 = @nitter_404;
        error_page 500 502 503 504 = @nitter_error;
    }

    # Nitter 404 handler - routes to React app
    location @nitter_404 {
        return 302 /app/404;
    }

    # Nitter error handler - routes to React app
    location @nitter_error {
        return 302 /app/error?code=$status;
    }

    # Nitter RSS feeds - direct access if needed
    location ~ ^/([a-zA-Z0-9_-]+)/rss {
        proxy_pass http://127.0.0.1:8080/$1/rss;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 300;
        proxy_connect_timeout 90;
        
        # Override Nitter error pages
        error_page 404 = @nitter_404;
        error_page 500 502 503 504 = @nitter_error;
    }

    # SECURITY: Block access to sensitive data directory
    location ~ ^/data/ {
        deny all;
        return 403;
    }

    # Frontend application - handle all other routes (MUST BE LAST)
    location / {
        proxy_pass http://127.0.0.1:3002;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 90;
        proxy_connect_timeout 90;
        
        # Override error pages for main app routes
        error_page 404 = @react_404;
        error_page 500 502 503 504 = @react_error;
    }
}